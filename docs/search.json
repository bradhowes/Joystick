{"Typealiases.html#/s:12JoyStickView0abC9XYMonitora":{"name":"JoyStickViewXYMonitor","abstract":"<p>Prototype of a monitor function that accepts a JoyStickViewXYReport.</p>"},"Typealiases.html#/s:12JoyStickView0abC12PolarMonitora":{"name":"JoyStickViewPolarMonitor","abstract":"<p>Prototype of a monitor function that accepts a JoyStickViewXYReport.</p>"},"Structs/Polar.html#/s:12JoyStickView5PolarV6radial14CoreFoundation7CGFloatVvp":{"name":"radial","abstract":"<p>Undocumented</p>","parent_name":"Polar"},"Structs/Polar.html#/s:12JoyStickView5PolarV5theta14CoreFoundation7CGFloatVvp":{"name":"theta","abstract":"<p>Undocumented</p>","parent_name":"Polar"},"Structs/JoyStickViewPolarReport.html#/s:12JoyStickView0abC11PolarReportV5angle14CoreFoundation7CGFloatVvp":{"name":"angle","abstract":"<p>Clockwise angle of the handle with respect to north/up of 0°.</p>","parent_name":"JoyStickViewPolarReport"},"Structs/JoyStickViewPolarReport.html#/s:12JoyStickView0abC11PolarReportV12displacement14CoreFoundation7CGFloatVvp":{"name":"displacement","abstract":"<p>Distance from the center of the base</p>","parent_name":"JoyStickViewPolarReport"},"Structs/JoyStickViewPolarReport.html#/s:12JoyStickView0abC11PolarReportV5angle12displacementAC14CoreFoundation7CGFloatV_AHtcfc":{"name":"init(angle:displacement:)","abstract":"<p>Constructor of new polar report</p>","parent_name":"JoyStickViewPolarReport"},"Structs/JoyStickViewPolarReport.html#/s:12JoyStickView0abC11PolarReportV11rectangularAA0abC8XYReportVvp":{"name":"rectangular","abstract":"<p>Convert this report into XY format</p>","parent_name":"JoyStickViewPolarReport"},"Structs/JoyStickViewXYReport.html#/s:12JoyStickView0abC8XYReportV1x14CoreFoundation7CGFloatVvp":{"name":"x","abstract":"<p>Delta X of handle from base center</p>","parent_name":"JoyStickViewXYReport"},"Structs/JoyStickViewXYReport.html#/s:12JoyStickView0abC8XYReportV1y14CoreFoundation7CGFloatVvp":{"name":"y","abstract":"<p>Delta Y of handle from base center</p>","parent_name":"JoyStickViewXYReport"},"Structs/JoyStickViewXYReport.html#/s:12JoyStickView0abC8XYReportV1x1yAC14CoreFoundation7CGFloatV_AHtcfc":{"name":"init(x:y:)","abstract":"<p>Constructor of new XY report</p>","parent_name":"JoyStickViewXYReport"},"Structs/JoyStickViewXYReport.html#/s:12JoyStickView0abC8XYReportV5polarAA0abC11PolarReportVvp":{"name":"polar","abstract":"<p>Convert this report into polar format</p>","parent_name":"JoyStickViewXYReport"},"Structs/JoyStickViewXYReport.html":{"name":"JoyStickViewXYReport","abstract":"<p>JoyStickView handle position as X, Y deltas from the base center. Note that here a positive <code>y</code> indicates that the"},"Structs/JoyStickViewPolarReport.html":{"name":"JoyStickViewPolarReport","abstract":"<p>JoyStickView handle position as angle/displacement values from the base center. Note that <code>angle</code> is given in degrees,"},"Structs/Polar.html":{"name":"Polar","abstract":"<p>Undocumented</p>"},"Extensions/CGPoint.html#/s:So7CGPointV12JoyStickViewE1poiyA2B_So8CGVectorVtFZ":{"name":"+(_:_:)","abstract":"<p>Add the components of a CGPoint and a CGVector</p>","parent_name":"CGPoint"},"Extensions/CGPoint.html#/s:So7CGPointV12JoyStickViewE1poiyA2B_So6CGSizeVtFZ":{"name":"+(_:_:)","abstract":"<p>Add the components of a CGPoint and a CGSize</p>","parent_name":"CGPoint"},"Extensions/CGPoint.html#/s:So7CGPointV12JoyStickViewE1soiyA2B_So8CGVectorVtFZ":{"name":"-(_:_:)","abstract":"<p>Subtract the components of a CGPoint and a CGVector</p>","parent_name":"CGPoint"},"Extensions/CGPoint.html#/s:So7CGPointV12JoyStickViewE1soiySo8CGVectorVAB_ABtFZ":{"name":"-(_:_:)","abstract":"<p>Subtract the components of two CGPoint values</p>","parent_name":"CGPoint"},"Extensions/CGVector.html#/s:So8CGVectorV12JoyStickViewE10magnitude214CoreFoundation7CGFloatVvp":{"name":"magnitude2","abstract":"<p>Obtain the squared magnitude of the CGVector</p>","parent_name":"CGVector"},"Extensions/CGVector.html#/s:So8CGVectorV12JoyStickViewE9magnitude14CoreFoundation7CGFloatVvp":{"name":"magnitude","abstract":"<p>Obtain the magnitude of the CGVector</p>","parent_name":"CGVector"},"Extensions/CGRect.html#/s:So6CGRectV12JoyStickViewE3midSo7CGPointVvp":{"name":"mid","abstract":"<p>Obtain the center of a CGRect\u0013.</p>","parent_name":"CGRect"},"Extensions/Bundle.html#/s:So8NSBundleC12JoyStickViewE11podResource4nameABSS_tF":{"name":"podResource(name:)","abstract":"<p>Locate an inner Bundle generated from CocoaPod packaging.</p>","parent_name":"Bundle"},"Extensions/Bundle.html":{"name":"Bundle"},"Extensions/CGRect.html":{"name":"CGRect","abstract":"<p>Convenience functions for CGRect.</p>"},"Extensions/CGVector.html":{"name":"CGVector","abstract":"<p>Convenience functions for CGVector.</p>"},"Extensions/CGPoint.html":{"name":"CGPoint","abstract":"<p>Convenience functions for CGPoint.</p>"},"Enums/JoyStickViewMonitorKind.html#/s:12JoyStickView0abC11MonitorKindO5polaryACyAA0abC11PolarReportVc_tcACmF":{"name":"polar(monitor:)","abstract":"<p>Install monitor that accepts polar position change reports</p>","parent_name":"JoyStickViewMonitorKind"},"Enums/JoyStickViewMonitorKind.html#/s:12JoyStickView0abC11MonitorKindO2xyyACyAA0abC8XYReportVc_tcACmF":{"name":"xy(monitor:)","abstract":"<p>Install monitor that accepts cartesian (XY) position change reports</p>","parent_name":"JoyStickViewMonitorKind"},"Enums/JoyStickViewMonitorKind.html#/s:12JoyStickView0abC11MonitorKindO4noneyA2CmF":{"name":"none","abstract":"<p>No monitoring for a JoyStickView instance.</p>","parent_name":"JoyStickViewMonitorKind"},"Enums/JoyStickViewMonitorKind.html":{"name":"JoyStickViewMonitorKind","abstract":"<p>Monitor kind. Determines the type of reporting that will be emitted from a JoyStickView instance.</p>"},"Classes/JoyStickView/HandlePositionMode.html#/s:12JoyStickViewAAC18HandlePositionModeO8absoluteyA2DmF":{"name":"absolute","abstract":"<p>Center of joystick handle moves to actual touch position (limited by base constraints)</p>","parent_name":"HandlePositionMode"},"Classes/JoyStickView/HandlePositionMode.html#/s:12JoyStickViewAAC18HandlePositionModeO8relativeyA2DmF":{"name":"relative","abstract":"<p>Center of joystick handle moves to delta between current touch position and first touch position</p>","parent_name":"HandlePositionMode"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC7monitorAA0abC11MonitorKindOvp":{"name":"monitor","abstract":"<p>Optional monitor which will receive updates as the joystick position changes. Supports polar and cartesian","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC11tappedBlockyycSgvp":{"name":"tappedBlock","abstract":"<p>Optional block to be called upon a tap.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC16handleConstraintSo6CGRectVSgvp":{"name":"handleConstraint","abstract":"<p>Optional rectangular region that restricts where the handle may move. The region should be defined in","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC5angle14CoreFoundation7CGFloatVvp":{"name":"angle","abstract":"<p>The last-reported angle from the joystick handle. Unit is degrees, with 0° up (north) and 90° right (east).","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC12displacement14CoreFoundation7CGFloatVvp":{"name":"displacement","abstract":"<p>The last-reported displacement from the joystick handle. Dimensionless, it is the ratio of movement over","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)movable":{"name":"movable","abstract":"<p>If <code>true</code> the joystick will move around in the parent&rsquo;s view so that the joystick handle is always at a","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC13movableCenterSo7CGPointVSgvp":{"name":"movableCenter","abstract":"<p>The original location of a movable joystick. Used to restore its position when user double-taps on it.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC13movableBoundsSo6CGRectVSgvp":{"name":"movableBounds","abstract":"<p>Optional rectangular region that restricts where the base may move. The region should be defined in the","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)baseAlpha":{"name":"baseAlpha","abstract":"<p>The opacity of the base of the joystick. Note that this is different than the view&rsquo;s overall opacity","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)handleAlpha":{"name":"handleAlpha","abstract":"<p>The opacity of the handle of the joystick. Note that this is different than the view&rsquo;s overall opacity setting.","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)handleTintColor":{"name":"handleTintColor","abstract":"<p>The tintColor to apply to the handle. Changing it while joystick is visible will update the handle image.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)handleSizeRatio":{"name":"handleSizeRatio","abstract":"<p>Scaling factor to apply to the joystick handle. A value of 1.0 will result in no scaling of the image,","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)colorFillHandleImage":{"name":"colorFillHandleImage","abstract":"<p>Control how the handle image is generated. When this is <code>false</code> (default), a CIFilter will be used to tint","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)travel":{"name":"travel","abstract":"<p>Controls how far the handle can travel along the radius of the base. A value of 1.0 (default) will let the","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)baseImage":{"name":"baseImage","abstract":"<p>The image to use for the base of the joystick</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)handleImage":{"name":"handleImage","abstract":"<p>The image to use for the joystick handle</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(py)enableDoubleTapForFrameReset":{"name":"enableDoubleTapForFrameReset","abstract":"<p>Control whether view will recognize a double-tap gesture and move the joystick base to its original location","parent_name":"JoyStickView"},"Classes/JoyStickView/HandlePositionMode.html":{"name":"HandlePositionMode","abstract":"<p>Position mode for a joystick handle. The default (original) is <code>absolute</code> mode.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC18handlePositionModeAB06HandleeF0Ovp":{"name":"handlePositionMode","abstract":"<p>How the handle is moved with the initial touch</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC20handleMovedTolerance14CoreFoundation7CGFloatVvp":{"name":"handleMovedTolerance","abstract":"<p>Minimum distance in either X or Y coordinate the handle must move for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/JoyStickView.html#/s:12JoyStickViewAAC14handleHasMovedSbvp\">handleHasMoved</a></code> to return <code>true</code>.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC011handleImageC0So07UIImageC0Cvp":{"name":"handleImageView","abstract":"<p>The image to use to show the handle of the joystick</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize new joystick view using the given frame.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@M@JoyStickView@objc(cs)JoyStickView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize new joystick view from a file.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)touchesBegan:withEvent:":{"name":"touchesBegan(_:with:)","abstract":"<p>A touch began in the joystick view</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)touchesMoved:withEvent:":{"name":"touchesMoved(_:with:)","abstract":"<p>An existing touch has moved.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)touchesCancelled:withEvent:":{"name":"touchesCancelled(_:with:)","abstract":"<p>An existing touch event has been cancelled (probably due to system event such as an alert). Move joystick to","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)touchesEnded:withEvent:":{"name":"touchesEnded(_:with:)","abstract":"<p>User removed touch from display. Move joystick to center of base.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)resetFrame":{"name":"resetFrame()","abstract":"<p>Reset our base to the initial location before the user moved it. By default, this will take place","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)layoutSubviews":{"name":"layoutSubviews()","abstract":"<p>This is the appropriate place to configure our internal views as we have our own geometry.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC14handleHasMovedSbvp":{"name":"handleHasMoved","abstract":"<p>Returns <code>true</code> if the handle has moved, where moving means the displacement in either coordinate is","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)gestureRecognizerShouldBegin:":{"name":"gestureRecognizerShouldBegin(_:)","abstract":"<p>Implementation of gesture recognizer delegate method. Controls whether a gesture recognizer should continue to","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/s:12JoyStickViewAAC14reportPositionyyF":{"name":"reportPosition()","abstract":"<p>Report the current joystick values to any registered <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/JoyStickView.html#/s:12JoyStickViewAAC7monitorAA0abC11MonitorKindOvp\">monitor</a></code>.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)setPolarMonitor:":{"name":"setPolarMonitor(_:)","abstract":"<p>Install an Obj-C block that will receive the polar coordinates of the joystick.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html#/c:@CM@JoyStickView@objc(cs)JoyStickView(im)setXYMonitor:":{"name":"setXYMonitor(_:)","abstract":"<p>Install an Obj-C block that will receive the XY unit coordinates of the joystick.</p>","parent_name":"JoyStickView"},"Classes/JoyStickView.html":{"name":"JoyStickView","abstract":"<p>A simple implementation of a joystick interface like those found on classic arcade games. This implementation detects"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}